{"version":3,"sources":["components/Navbar.js","components/QuoteCard.js","components/QuoteList.js","components/QuoteForm.js","components/GetQuote.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","QuoteCard","props","src","image","alt","character","quote","quotes","QuoteList","map","item","QuoteForm","state","handleSubmit","bind","handleOnchange","event","alert","this","preventDefault","value1","target","value","length","setState","maximumReached","numRemaining","onSubmit","htmlFor","id","name","type","onChange","React","Component","GetQuote","getQuote","onClick","App","axios","get","then","res","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32528eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nfunction Navbar(){\r\n    return (\r\n         <nav className=\"Navbar\">\r\n                  <a href=\"https://en.wikipedia.org/wiki/The_Simpsons\">Simpons Quotes</a>\r\n\r\n        </nav>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './QuoteCard.css';\r\n\r\nfunction QuoteCard(props) {\r\n  return (\r\n    <figure className=\"QuoteCard\">\r\n      <img src={props.image} alt={props.character} />\r\n      <figcaption>\r\n        <blockquote>{props.quote}</blockquote>\r\n        <cite>{props.character}</cite>\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default QuoteCard;","// src/components/QuoteList.js\r\nimport React from \"react\";\r\nimport QuoteCard from \"./QuoteCard\";\r\n/// An array of objects\r\n\r\n\r\nconst quotes = [\r\n  {\r\n    quote:\r\n      \"Facts are meaningless. You could use facts to prove anything that's even remotely true.\",\r\n    character: \"Homer Simpson\",\r\n    image:\r\n      \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72\"\r\n  },\r\n  {\r\n    quote: \"Nothing you say can upset us. We're the MTV generation.\",\r\n    character: \"Bart Simpson\",\r\n    image:\r\n      \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72\"\r\n  },\r\n  {\r\n    quote: \"That's where I saw the leprechaun...He told me to burn things.\",\r\n    character: \"Ralph Wiggum\",\r\n    image:\r\n      \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72\"\r\n  },\r\n  {\r\n    quote:\r\n      \"Hello, Simpson. I'm riding the bus today because Mother hid my car keys to punish me for talking to a woman on the phone.\",\r\n    character: \"Principal Skinner\",\r\n    image:\r\n      \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72\"\r\n  }\r\n];\r\n\r\nconst QuoteList = () => (\r\n  <div>\r\n    {quotes.map(item => (\r\n  <QuoteCard quote={item.quote} image={item.image} character={item.character} />\r\n))}\r\n  </div>\r\n);\r\n\r\n\r\n\r\nexport default QuoteList;","import React from \"react\"\r\nimport './QuoteCard.css'\r\nconst MAX_LENGTH = 10;\r\n\r\nclass QuoteForm extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\nthis.state={\r\n    character: ''\r\n}\r\nthis.handleSubmit= this.handleSubmit.bind(this)\r\nthis.handleOnchange = this.handleOnchange.bind(this)\r\n    }\r\n    handleSubmit(event){\r\n    alert('A name was submitted: '+ this.state.character)\r\n    event.preventDefault()\r\n}\r\nhandleOnchange(event){\r\n    let value1=event.target.value\r\n    if(value1.length<= MAX_LENGTH){\r\n\r\n      this.setState({character: value1})\r\n    }\r\n\r\n}\r\n\r\n   render(){\r\n       const maximumReached=this.state.character<=MAX_LENGTH\r\n       const numRemaining = MAX_LENGTH - this.state.character.length;\r\n\r\n       return(\r\n           <form className = 'QuoteForm'\r\n           onSubmit ={this.handleSubmit}>\r\n<label htmlFor = 'character'>Character:</label>\r\n<input\r\n className={maximumReached ? 'length-maximum-reached' : 'length-ok'}\r\nid='name'\r\nname = 'character'\r\ntype = 'text'\r\nvalue = {this.state.character}\r\nonChange={this.handleOnchange}\r\n></input>\r\n    <small className=\"remaining-characters\">\r\n          {numRemaining} remaining characters\r\n        </small>\r\n        <p>\r\n          You typed: <strong>{this.state.character}</strong>\r\n        </p>\r\n           </form>\r\n       )\r\n   }\r\n}\r\nexport default QuoteForm","import React, { Component } from 'react';\r\nimport './GetQuote.css'\r\nexport default class GetQuote extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n\r\n        const {getQuote, quote}=this.props\r\n\r\n\r\n        return (\r\n            <div className=\"quote\">\r\n<img src={quote.image} alt=\" quoteImg\"/>\r\n<p>{quote.character}</p>\r\n<p>{quote.quote}</p>\r\n<button type=\"button\" onClick={getQuote}>Get quote</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport QuoteList from './components/QuoteList';\nimport QuoteForm  from \"./components/QuoteForm\";\nimport axios from 'axios';\nimport GetQuote from './components/GetQuote'\n// import { getQueriesForElement, render } from '@testing-library/react';\n\n\nexport default class App extends Component {\n  constructor(){\n    super()\n    this.state={\n      quote: 'Click BTN'\n    }\n    this.getQuote=this.getQuote.bind(this)\n  }\n  getQuote(){\n\n     axios.get('https://simpsons-quotes-api.herokuapp.com/quotes')\n     .then(res=> res.data )\n     .then(data=> {\nthis.setState({\n  quote:data[0]\n})\n     })\n  }\n\n  render() {\nconst {quote}=this.state\n    return (\n\n            <div className=\"App\">\n      <Navbar />\n      <QuoteForm />\n      <GetQuote quote={quote} getQuote={this.getQuote}/>\n      <QuoteList   />\n    </div>\n\n    )\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}